<h1>About</h1>
<p>倉儲連結:<a href="https://github.com/mdecad2022/site-A41023255">https://github.com/mdecad2022/site-A41023255</a></p>
<p>倉儲網站:<a href="https://mdecad2022.github.io/site-A41023255/content/index.html">https://mdecad2022.github.io/site-A41023255/content/index.html</a></p><h1>HW</h1>
<h2>w6</h2>
<h3>零件</h3>
<p>軸承 <a href="https://cad.onshape.com/documents/3c84520991bc203bb6cfa878/w/15dcd53dae06ae5257646b2d/e/fd4812985b2235abe8951922" title="6203RS Bearing_step.prt">6203RS Bearing_step.prt</a></p>
<p>影片:<a href="https://youtu.be/bhbDOgjQ0C4" title="零件1">零件1</a></p>
<p>軸承 <a href="https://cad.onshape.com/documents/ce6088bfe87401806949263d/w/9b624337af5a49d3f05d43cf/e/d75549e3e25bbf83d70e013d" title="Ball bearing _ODC32-IDC12__step.prt">Ball bearing _ODC32-IDC12__step.prt</a></p>
<p>影片:<a href="https://youtu.be/aIAKrmgH698" title="零件2">零件2</a></p>
<p>組合件零件一 <a href="https://cad.onshape.com/documents/13a78907508222d770e63c7e/w/762f2f06a28f802a40cdd8c0/e/18728b25f020cd87ec7c2b21" title="Base_step.prt">Base_step.prt</a>(無影片)</p>
<p>組合件零件二 <a href="https://cad.onshape.com/documents/8d90f8a32138a1024dbcf7fa/w/011dc15f6b65e28a75bf6cdb/e/a27f7871645195ff6cb9d011" title="Base clamp_step.prt">Base clamp_step.prt</a>(無影片)</p>
<p>組合件零件三 <a href="https://cad.onshape.com/documents/6e1a4b1e9c5027cc41e087eb/w/164bf3b1603ef13d943c1089/e/2ea7e41b5b020ce2cce0fe39" title="Bolt_1_step.prt">Bolt_1_step.prt</a></p>
<p>影片<a href="https://youtu.be/O0V6FB7LdHQ" title="零件三">零件三</a></p>
<p>組合件零件四 <a href="https://cad.onshape.com/documents/33d87e2522afb846c6832178/w/948dd5a96c188158123b4547/e/61ded26106895257b125e11f" title="Bolt_step.prt">Bolt_step.prt</a></p>
<p>影片 <a href="https://youtu.be/VIXMFTw9gDc" title="零件四">零件四</a></p>
<p>組合件零件五<a href="https://cad.onshape.com/documents/09ad41bbea44cc23df81336f/w/45bd896e4d2868c1ed025b21/e/39dc3c3c40eab3b89ae91844" title="Bottom safety guard_step.prt">Bottom safety guard_step.prt</a></p>
<p>影片 <a href="https://youtu.be/ZimcUwnCBLI" title="零件五">零件五</a></p>
<p>組合件零件六<a href="https://cad.onshape.com/documents/c684ffd65aeaa57a26ead17a/w/e3463468966e484fe2f1ebb3/e/47e988ee1fb4f3e6f306786e" title="Clamp_step.prt">Clamp_step.prt</a></p>
<p>影片 <a href="https://youtu.be/lQxJqA3oMRA" title="零件六">零件六</a></p>
<p>組合件零件七<a href="https://cad.onshape.com/documents/5d735591a8f631b45776c003/w/23f616daf98e3a946bdf1022/e/92096be67848241947c7c7c2" title="Column_step.prt">Column_step.prt</a></p>
<p>影片 <a href="https://youtu.be/EmbycTYTrR8" title="零件七">零件七</a></p>
<p>組合件零件八<a href="https://cad.onshape.com/documents/fcd292cea4ab3e93685d5dc8/w/6fb1cefd15c77020d7d3aa3e/e/69677d3125b91c45eaf937f9" title="Drill chuck _B16 0.5-13mm__step.prt">Drill chuck _B16 0.5-13mm__step.prt</a></p>
<p>影片 <a href="https://youtu.be/WY4zYprR-jM" title="零件八">零件八</a>(未修改)</p>
<p>組合件零件九<a href="https://cad.onshape.com/documents/0559de6233aa39c1e133a3db/w/3e5c11d0f59fc15a05669009/e/fcb6f07965c75a9561be264c" title="Driven pulley_step.prt">Driven pulley_step.prt</a></p>
<p>影片<a href="https://youtu.be/2aT23ox6AmE" title="零件九">零件九</a></p>
<p>組合件零件十一<a href="https://cad.onshape.com/documents/711aa299f13ddc86a7e3cde2/w/028fbf72abc3aa93afc4bc43/e/2978f945dd8387ec5da54780" title="Head_step.prt">Head_step.prt</a>(無影片)</p>
<p>組合件零件十二<a href="https://cad.onshape.com/documents/3128e1fb1252bba48c28ae28/w/cb5a8114e3a8f0b013a05ac3/e/6ebbc605b95670a0478e06c2" title="Knob axle_step.prt">Knob axle_step.prt</a></p>
<p>影片 <a href="https://youtu.be/eK0yhdAZRd0">零件十二</a></p>
<p>組合件零件十三<a href="https://cad.onshape.com/documents/11630e553c7e997a372bf5f7/w/71106aec957e7c9cdd8d5f3c/e/2691cfa5def127ba86546ad6" title="Motor tensioner clamp_step.prt">Motor tensioner clamp_step.prt</a></p>
<p>影片<a href="https://youtu.be/AFzz2_caWFs" title="零件十三">零件十三</a></p>
<p>組合件零件十五<a href="https://cad.onshape.com/documents/870468000fa0dd2dd37800d4/w/676d2cf146625eaf58203db8/e/a13aad107ad53594963f8feb" title="Motor_step.prt">Motor_step.prt</a>(無影片)</p>
<p>組合件零件十六<a href="https://cad.onshape.com/documents/19bd4308571e0db2e1d414e8/w/c486ff6e009a39bdf59f5e38/e/b29f0037ce2cdde05a606e27" title="Part 1_1_step.prt">Part 1_1_step.prt</a></p>
<p>影片 <a href="https://youtu.be/yhATXAVR0ks" title="零件十六">零件十六</a></p>
<p>組合件零件十七<a href="https://cad.onshape.com/documents/d253a8afa162c0e6b5a63062/w/da7aebd0c4a67f1fead6a9be/e/1c0585ca95ee3bc8207c4578" title="Part 1_step.prt">Part 1_step.prt</a></p>
<p>影片<a href="https://youtu.be/cLHvmMEM73w" title="零件十七">零件十七</a></p>
<p>組合件零件十八<a href="https://cad.onshape.com/documents/65900941e43189fc43c0cbda/w/968672ba6ada1095e7965e3a/e/d96877385707e17f1fa8da54" title="Pulley_step.prt">Pulley_step.prt</a> (無影片)</p>
<p>組合件零件十九<a href="https://cad.onshape.com/documents/856e668946a8e3967b017f0b/w/5430702bda25913008647608/e/fefbb796e468a71140523f3f" title="Rubber gasket_step.prt">Rubber gasket_step.prt</a></p>
<p>影片<a href="https://youtu.be/KyJ82A11-LY" title="零件十九">零件十九</a></p>
<p>組合件零件二十<a href="https://cad.onshape.com/documents/15be9a0a0606690b3afa5a7c/w/56186970bc8a0ceba0198cb3/e/095fd87fe14a2d94a1d7a580" title="Rubber knob_step.prt">Rubber knob_step.prt</a></p>
<p>影片<a href="https://youtu.be/rR4UEEB4G7E" title="零件二十">零件二十</a></p>
<p>組合件零組件二十一 <a href="https://cad.onshape.com/documents/0cef2bcd817f1bc1015832f2/w/f218139104205f49281454e7/e/60de4036408866e9acea07d2" title="Spindle guide_step.prt">Spindle guide_step.prt</a></p>
<p>影片<a href="https://youtu.be/1Zg53AHpErs" title="零件二十一">零件二十一</a></p>
<p>組合件二十二 <a href="https://cad.onshape.com/documents/7eb09f6b34152e1d6321f3d3/w/4321d319df71a47c8e7c110d/e/20bffb96556b52ceb93d24e3" title="零件22">零件22</a></p>
<p>影片<a href="https://youtu.be/LzScwINTPlY" title="零件二十二">零件二十二</a></p>
<p>零組件二十三<a href="https://cad.onshape.com/documents/2786ef443354a49afdae879b/w/63486c8cee566a8afb3f1f35/e/1d61ec0278ab07d6f2cf4155" title="Spindle_step.prt ">Spindle_step.prt </a></p>
<p>影片<a href="https://youtu.be/upNTujRtzyU" title="零件二十三">零件二十三</a></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 8,
  buttonFrameLength: 4,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData" height="600" muted="true" width="800">
<source src="/downloads/NX Wink.mp4" type="video/mp4"/></video></div>
<script>
var winkVideoData10 = {
  dataVersion: 1,
  frameRate: 8,
  buttonFrameLength: 4,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData" height="600" muted="true" width="800">
<source src="/downloads/10.mp4" type="video/mp4"/></video></div><h2>W10</h2>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕.</p>
<p><button id="add1to100">W10</button></p>
<p></p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/A41023255/859603dda0f9612c285b7f92043c0539/raw/e03d6b2bc86dc8a2e4983c7b957493fb4124c6aa/W10"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/A41023255/859603dda0f9612c285b7f92043c0539/raw/e03d6b2bc86dc8a2e4983c7b957493fb4124c6aa/W10"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()
# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/>
<p>查驗輸入字串程式:</p>
<p><button id="check_input">查驗輸入字串</button></p>
<p><!-- 判斷輸入字串是否aA1$, 且至少 8 個字元-開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

check_str_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/56dc6a6b8eaa05b80994ac6f08ebc9326330be43/check_str_input_content_1.py"
# 從 gist 取得程式碼
check_src = open(check_str_url).read()

def check_input(ev):
    Ace3.editor.setValue(check_src)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    #Ace.run()

# id 為 "check_input" 的按鈕點按時, 執行 check_input 方法
doc["check_input"].bind('click', check_input)

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- 判斷輸入字串是否aA1$, 且至少 8 個字元-結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 -->
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<h2>W11</h2>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕.</p>
<p><button id="add1to100">W11</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/A41023255/cc504beca7d1a998e01b3752b60439b4/raw/7a1cd334a29d42802bf23112e62e010ec92e8435/W11"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/A41023255/cc504beca7d1a998e01b3752b60439b4/raw/7a1cd334a29d42802bf23112e62e010ec92e8435/W11"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()
# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/>
<p>查驗輸入字串程式:</p>
<p><button id="check_input">查驗輸入字串</button></p>
<p><!-- 判斷輸入字串是否aA1$, 且至少 8 個字元-開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

check_str_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/56dc6a6b8eaa05b80994ac6f08ebc9326330be43/check_str_input_content_1.py"
# 從 gist 取得程式碼
check_src = open(check_str_url).read()

def check_input(ev):
    Ace3.editor.setValue(check_src)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    #Ace.run()

# id 為 "check_input" 的按鈕點按時, 執行 check_input 方法
doc["check_input"].bind('click', check_input)

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- 判斷輸入字串是否aA1$, 且至少 8 個字元-結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 -->
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<!-- editor2 結束 --><hr/>
<h2>w14</h2>
<h3>NX</h3>
<p><a href="/downloads/nx1.zip" title="零件1">零件1</a></p>
<script>
var winkVideoData7 = {
  dataVersion: 1,
  frameRate: 8,
  buttonFrameLength: 4,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData" height="600" muted="true" width="800">
<source src="/downloads/7.mp4" type="video/mp4"/></video></div>
<script>
var winkVideoData8 = {
  dataVersion: 1,
  frameRate: 6,
  buttonFrameLength: 3,
  buttonFrameOffset: 1,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"> <a href="/downloads/nx2.zip" title="零件2">零件2</a><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData" height="600" muted="true" width="800">
<source src="/downloads/8.mp4" type="video/mp4"/></video></div>
<script>
var winkVideoData9 = {
  dataVersion: 1,
  frameRate: 6,
  buttonFrameLength: 3,
  buttonFrameOffset: 1,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"> <a href="/downloads/nx 3.zip" title="零件3">零件3</a><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData" height="600" muted="true" width="800">
<source src="/downloads/9.mp4" type="video/mp4"/></video> <a href="/downloads/nx 組合件.zip" title="組合件">組合件</a></div>
<h3>onshape</h3>
<p></p>
<p><a href="https://cad.onshape.com/documents/e15a71052654fcd142b01dc6/w/ef38e214c1cbeb8a56aeb12b/e/6e648a31631339ba7ca826f4" title="零件1">零件1</a></p>
<script>
var winkVideoData4 = {
  dataVersion: 1,
  frameRate: 6,
  buttonFrameLength: 3,
  buttonFrameOffset: 1,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"></div>
<div class="winkVideoContainerClass"></div>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData" height="600" muted="true" width="800">
<source src="/downloads/4.mp4" type="video/mp4"/></video></div>
<script>
var winkVideoData5 = {
  dataVersion: 1,
  frameRate: 6,
  buttonFrameLength: 3,
  buttonFrameOffset: 1,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"></div>
<div class="winkVideoContainerClass"></div>
<div class="winkVideoContainerClass"><a href="https://cad.onshape.com/documents/ff92a0feb56c66253403a863/w/1ad24f603692d0906c922cef/e/e5c03f68df748e4251944bb3" title="零件2">零件2</a></div>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData" height="600" muted="true" width="800">
<source src="/downloads/5.mp4" type="video/mp4"/></video></div>
<script>
var winkVideoData6 = {
  dataVersion: 1,
  frameRate: 6,
  buttonFrameLength: 3,
  buttonFrameOffset: 1,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"> </div>
<div class="winkVideoContainerClass"><a href="https://cad.onshape.com/documents/ea9cea7f350a07581dcced25/w/44ce78802c8a4aa8a1bf334e/e/dd9465c783ac1ad2e6743738" title="零件3">零件3</a></div>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData" height="600" muted="true" width="800">
<source src="/downloads/6.mp4" type="video/mp4"/></video></div>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/07olIhDZ2xM" title="YouTube video player" width="560"></iframe></p>
<h3>Solvespace</h3>
<script>
var winkVideoData1 = {
  dataVersion: 1,
  frameRate: 6,
  buttonFrameLength: 3,
  buttonFrameOffset: 1,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData" height="600" muted="true" width="800">
<source src="/downloads/1.mp4" type="video/mp4"/></video></div>
<script>
var winkVideoData2 = {
  dataVersion: 1,
  frameRate: 6,
  buttonFrameLength: 3,
  buttonFrameOffset: 1,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData" height="600" muted="true" width="800">
<source src="/downloads/2.mp4" type="video/mp4"/></video></div>
<script>
var winkVideoData 3= {
  dataVersion: 1,
  frameRate: 6,
  buttonFrameLength: 3,
  buttonFrameOffset: 1,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData" height="600" muted="true" width="800">
<source src="/downloads/3.mp4" type="video/mp4"/></video></div>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation</h4>
<h4>Variables</h4>
<h4>Comments</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a></h4>
<h4>print</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>